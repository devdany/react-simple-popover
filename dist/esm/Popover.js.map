{"version":3,"sources":["../../src/Popover.tsx"],"names":["React","useState","useMemo","DEFAULT_POPOVER_MARGIN_TOP","DEFAULT_POPOVER_MARGIN_LEFT","Popover","isOpen","onClose","children","content","contentEl","setContentEl","buttonEl","setButtonEl","handleClickBackground","left","top","leftResut","offsetLeft","topResult","offsetTop","clientHeight","clientWidth","document","body","el","position","width","height","e","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AASA,MAAMC,0BAA0B,GAAG,CAAnC;AACA,MAAMC,2BAA2B,GAAG,EAApC;AAEA,eAAe,SAASC,OAAT,CAAiB;AAC9BC,EAAAA,MAD8B;AACtBC,EAAAA,OADsB;AACbC,EAAAA,QADa;AACHC,EAAAA;AADG,CAAjB,EAEL;AACR,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAM,IAAN,CAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAM,IAAN,CAAxC;;AAEA,QAAMa,qBAAqB,GAAG,MAAM;AAClCP,IAAAA,OAAO;AACR,GAFD;;AAIA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBd,OAAO,CAAC,MAAM;AAClC,QAAI,CAACU,QAAD,IAAa,CAACF,SAAlB,EAA6B;AAC3B,aAAO;AACLK,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,GAAG,EAAE;AAFA,OAAP;AAID;;AACD,QAAIC,SAAS,GAAGL,QAAQ,EAAEM,UAA1B;AACA,QAAIC,SAAS,GAAGP,QAAQ,EAAEQ,SAAV,GAAsBR,QAAQ,CAACS,YAA/B,GAA8ClB,0BAA9D,CARkC,CASlC;;AACA,QAAIc,SAAS,GAAGP,SAAS,CAACY,WAAtB,GAAoCC,QAAQ,CAACC,IAAT,CAAcF,WAAtD,EAAmE;AACjEL,MAAAA,SAAS,IACPA,SAAS,GAAGP,SAAS,CAACY,WAAtB,GAAoCC,QAAQ,CAACC,IAAT,CAAcF,WAAlD,GAAgElB,2BADlE;AAGD,KAdiC,CAgBlC;;;AACA,QAAIe,SAAS,GAAGT,SAAS,CAACW,YAAtB,GAAqCE,QAAQ,CAACC,IAAT,CAAcH,YAAvD,EAAqE;AACnEF,MAAAA,SAAS,IAAKA,SAAS,GAAGT,SAAS,CAACW,YAAtB,GAAqCE,QAAQ,CAACC,IAAT,CAAcH,YAAjE;AACD;;AAED,WAAO;AACLN,MAAAA,IAAI,EAAEE,SADD;AAELD,MAAAA,GAAG,EAAEG;AAFA,KAAP;AAID,GAzB4B,EAyB1B,CAACT,SAAD,EAAYE,QAAZ,CAzB0B,CAA7B;;AA2BA,MAAI,CAACN,MAAL,EAAa;AACX,wBACE,iCACGE,QADH,CADF;AAKD;;AAED,sBACE,uDACE;AACE,IAAA,GAAG,EAAGiB,EAAD,IAAQZ,WAAW,CAACY,EAAD;AAD1B,KAGGjB,QAHH,CADF,eAME;AACE,IAAA,KAAK,EAAE;AACLkB,MAAAA,QAAQ,EAAE,UADL;AAELX,MAAAA,IAAI,EAAE,CAFD;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILW,MAAAA,KAAK,EAAEJ,QAAQ,CAACC,IAAT,CAAcF,WAJhB;AAKLM,MAAAA,MAAM,EAAEL,QAAQ,CAACC,IAAT,CAAcH;AALjB,KADT;AAQE,IAAA,OAAO,EAAEP;AARX,kBAUE;AACE,IAAA,GAAG,EAAGW,EAAD,IAAQd,YAAY,CAACc,EAAD,CAD3B;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAELX,MAAAA,IAFK;AAGLC,MAAAA;AAHK,KAFT;AAOE,IAAA,OAAO,EAAGa,CAAD,IAAOA,CAAC,CAACC,eAAF;AAPlB,KASGrB,OATH,CAVF,CANF,CADF;AA+BD;;AArFCH,EAAAA,M;AACAC,EAAAA,O;AAEAE,EAAAA,O","sourcesContent":["import React, { useState, useMemo } from 'react';\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  children: React.ReactChild\n  content: React.ReactNode\n};\n\nconst DEFAULT_POPOVER_MARGIN_TOP = 8;\nconst DEFAULT_POPOVER_MARGIN_LEFT = 40;\n\nexport default function Popover({\n  isOpen, onClose, children, content,\n}: Props) {\n  const [contentEl, setContentEl] = useState<any>(null);\n  const [buttonEl, setButtonEl] = useState<any>(null);\n\n  const handleClickBackground = () => {\n    onClose();\n  };\n\n  const { left, top } = useMemo(() => {\n    if (!buttonEl || !contentEl) {\n      return {\n        left: 0,\n        top: 0,\n      };\n    }\n    let leftResut = buttonEl?.offsetLeft;\n    let topResult = buttonEl?.offsetTop + buttonEl.clientHeight + DEFAULT_POPOVER_MARGIN_TOP;\n    // 오른쪽으로 넘어버리면\n    if (leftResut + contentEl.clientWidth > document.body.clientWidth) {\n      leftResut -= (\n        leftResut + contentEl.clientWidth - document.body.clientWidth + DEFAULT_POPOVER_MARGIN_LEFT\n      );\n    }\n\n    // 아래쪽으로 넘어버리면\n    if (topResult + contentEl.clientHeight > document.body.clientHeight) {\n      topResult -= (topResult + contentEl.clientHeight - document.body.clientHeight);\n    }\n\n    return {\n      left: leftResut,\n      top: topResult,\n    };\n  }, [contentEl, buttonEl]);\n\n  if (!isOpen) {\n    return (\n      <div>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div\n        ref={(el) => setButtonEl(el)}\n      >\n        {children}\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: document.body.clientWidth,\n          height: document.body.clientHeight,\n        }}\n        onClick={handleClickBackground}\n      >\n        <div\n          ref={(el) => setContentEl(el)}\n          style={{\n            position: 'absolute',\n            left,\n            top,\n          }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {content}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"file":"Popover.js"}