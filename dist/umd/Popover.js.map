{"version":3,"sources":["../../src/Popover.tsx"],"names":["isOpen","onClose","content","DEFAULT_POPOVER_MARGIN_TOP","DEFAULT_POPOVER_MARGIN_LEFT","useState","handleClickBackground","top","useMemo","left","leftResut","buttonEl","topResult","contentEl","document","el","setButtonEl","position","width","height","clientHeight","setContentEl","e"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  children: React.ReactChild\n  content: React.ReactNode\n};\n\nconst DEFAULT_POPOVER_MARGIN_TOP = 8;\nconst DEFAULT_POPOVER_MARGIN_LEFT = 40;\n\nexport default function Popover({\n  isOpen, onClose, children, content,\n}: Props) {\n  const [contentEl, setContentEl] = useState<any>(null);\n  const [buttonEl, setButtonEl] = useState<any>(null);\n\n  const handleClickBackground = () => {\n    onClose();\n  };\n\n  const { left, top } = useMemo(() => {\n    if (!buttonEl || !contentEl) {\n      return {\n        left: 0,\n        top: 0,\n      };\n    }\n    let leftResut = buttonEl?.offsetLeft;\n    let topResult = buttonEl?.offsetTop + buttonEl.clientHeight + DEFAULT_POPOVER_MARGIN_TOP;\n    // 오른쪽으로 넘어버리면\n    if (leftResut + contentEl.clientWidth > document.body.clientWidth) {\n      leftResut -= (\n        leftResut + contentEl.clientWidth - document.body.clientWidth + DEFAULT_POPOVER_MARGIN_LEFT\n      );\n    }\n\n    // 아래쪽으로 넘어버리면\n    if (topResult + contentEl.clientHeight > document.body.clientHeight) {\n      topResult -= (topResult + contentEl.clientHeight - document.body.clientHeight);\n    }\n\n    return {\n      left: leftResut,\n      top: topResult,\n    };\n  }, [contentEl, buttonEl]);\n\n  if (!isOpen) {\n    return (\n      <div>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div\n        ref={(el) => setButtonEl(el)}\n      >\n        {children}\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: document.body.clientWidth,\n          height: document.body.clientHeight,\n        }}\n        onClick={handleClickBackground}\n      >\n        <div\n          ref={(el) => setContentEl(el)}\n          style={{\n            position: 'absolute',\n            left,\n            top,\n          }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {content}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"file":"Popover.js"}